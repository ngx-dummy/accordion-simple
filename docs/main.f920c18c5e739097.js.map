{"version":3,"file":"main.f920c18c5e739097.js","mappings":"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","names":["dummyAccordionList1","id","name","items","title","body","dummyAccordionList2","loaderIn","trigger","transition","style","opacity","transform","animate","keyframes","offset","INI_STATE","InjectionToken","factory","iniTogglerFn","AccordionOpenService","BehaviorSubject","constructor","iniState","super","this","itemsStats","next","complete","unsubscribe","itemsOpen$","asObservable","itemsOpenSnapshot","value","i0","accordionAnimations","accordItemsIn","query","stagger","optional","spinnerIn","transformOrigin","height","accordionItemAnimations","accordionItemBodyHeightCollapse","state","visibility","pluckIToggler","itemId","isOpen","rest","pluckOpenTogglesIdsToStr","toggles","filter","t","map","join","sanitizeHTML","item","sanitizer","sanitize","SecurityContext","getSvgSafeRes","file","bypassSecurityTrustResourceUrl","prepRes","rawSvg","btoa","svgToBase64src","bodyWithTmpl","itemTemplate","getItemBodyTemplate","defaultTmpl","getItemBodyCtx","itemBody","ImgClasses","ImgLoadClass","AccordionItemImgDirective","el","renderer","zone","target","_setLoadSuccess","_setLoadAlter","classList","contains","LOGO","_setItemHeaderImgSafeSrc","_baseLogoImg","ENDING","console","log","_baseChevronImg","runOutsideAngular","_src","_nativeImgEl","_closeSign","_openSign","imgRef","src","setAttribute","_setNoRecheck","attr","dataset","add","SUCCESS","_isSet","ALTER","length","_needToRecheck","ngAfterViewInit","nativeElement","ngAfterContentChecked","_doOpenCloseSrcRecheck","_isLogoImg","_readElDataSet","_isCloserImg","undefined","_isImgOpenClose","selectors","ctx","AccordionItemComponent","of","startAnim","e","element","willChange","classes","fromState","toState","replace","doneAnim","changeDetection","AccordionItemDirective","hostCmp","hostElRef","itemStatusSvc","render","cd","headHeight","headBgColor","headColor","bodyBgColor","bodyColor","fontSize","bodyPadding","EventEmitter","Subject","outerHTML","includes","_handleClick","idx","_toggle","toggled","emit","ngOnInit","itemNum","isNumbered","isOpen$","pipe","takeUntil","hostDestroy$$","val","find","pluck","tap","nativeEl","itemEl","getElementsByClassName","headEl","bodyEl","headElLogoImgEl","headElCloserImgEl","logo","openSign","closeSign","detectChanges","setStyle","itemStyles","margin","padding","font","fontStyle","fontFamily","marginBottom","marginTop","setProperty","headFont","headFontSize","bodyMargin","bodyFont","bodyFontSize","bodyTextAlign","bodyDblclkClose","ngOnDestroy","ElementRef","AccordionComponent","itemsOpenSvc","hostEl","numberedItems","isMultiShow","bodyDblclkCloseItems","maxWidth","itemsGuts","itemStyling","setItemsOpen","eId","opened","multiSelect","accordionItems","forEach","onItemToggled","_ind","attributes","accordionList","acc","_accord","Object","assign","i","loadingTpl","_loadingTpl","defloadingTpl","_bodyDblclkClose","accordionStyling","subscribe","ids","_openedItems","_isNumbered","Array","isArray","reduce","accu","curr","_itemStyle","entries","key","s","accordEl","ngOnChanges","changes","keys","prop","previousValue","currentValue","close","TemplateRef","AppComponent","delay","styling","accordList2","list1","simpleBodyTmpl","tmpl2","btnRipple","document","querySelector","ripple","MDCRipple","destroy","_r0","AccordionModule","CommonModule","HttpClientModule","App2Component","Promise","resolve","AppModule","bootstrap","BrowserAnimationsModule","environment","enableProdMode","setTimeout","__NgCli_bootstrap_1","bootstrapModule","ngZoneEventCoalescing","catch","err","error"],"sourceRoot":"webpack:///","sources":["./projects/accordion-sample/src/app/helpers/dummy-data.ts","./projects/accordion-sample/src/app/loader.anim.ts","./projects/@ngx-dummy/accordion-simple/src/lib/accordion-open.service.ts","./projects/@ngx-dummy/accordion-simple/src/lib/animations.ts","./projects/@ngx-dummy/accordion-simple/src/lib/settings/IToggler.ts","./projects/@ngx-dummy/accordion-simple/src/lib/settings/helpers.ts","./projects/@ngx-dummy/accordion-simple/src/lib/accordion-item-img.directive.ts","./projects/@ngx-dummy/accordion-simple/src/lib/theming/icons-base.ts","./projects/@ngx-dummy/accordion-simple/src/lib/accordion-item.component.html","./projects/@ngx-dummy/accordion-simple/src/lib/accordion-item.component.ts","./projects/@ngx-dummy/accordion-simple/src/lib/accordion-item.directive.ts","./projects/@ngx-dummy/accordion-simple/src/lib/accordion.component.html","./projects/@ngx-dummy/accordion-simple/src/lib/accordion.component.ts","./projects/accordion-sample/src/app/app.component.html","./projects/accordion-sample/src/app/app.component.ts","./projects/@ngx-dummy/accordion-simple/src/lib/accordion.module.ts","./projects/accordion-sample/src/app/app2.component.ts","./projects/accordion-sample/src/app/app.module.ts","./projects/accordion-sample/src/main.ts"],"sourcesContent":["/* eslint-disable max-len */\nimport { Accordion } from '@ngx-dummy/accordion-simple/index';\n\nexport const dummyAccordionList1: Accordion = {\n\tid: 'Accord_1',\n\tname: 'Accordion 1',\n\titems: [\n\t\t{\n\t\t\ttitle: 'Accordion Card 1',\n\t\t\tbody: '[[TMPL]]',\n\t\t},\n\t\t{\n\t\t\ttitle: 'Accordion Card 2',\n\t\t\tbody: `\n\t\t\t<a href=\"//github.com/ngx-dummy/accordion-simple\">Project Repository</a>\n\t\t\t<br />\n\t\t\tSimple Angular accordion component and a simple demonstrator app; the app is a simple demonstrator project - showcasing the integration of the accordion library and applying basic setting of it.`,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Accordion simple Card 3 x 11',\n\t\t\tbody: `\n\t\t\t\t<p>Para1 </p>\n\t\t\t\t<h4> Heading </h4>\n\t\t\t\t<script type='text/javascript'>alert('Injection !');</script>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n      `,\n\t\t},\n\t],\n};\n\nexport const dummyAccordionList2: Accordion = {\n\tid: 'Accord_2',\n\tname: 'Accordion 2',\n\titems: [\n\t\t{\n\t\t\tid: 'item0',\n\t\t\ttitle: 'Card ',\n\t\t\tbody: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione',\n\t\t},\n\t\t{\n\t\t\tid: 'item1',\n\t\t\ttitle: 'Card 1',\n\t\t\tbody: `\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n      `,\n\t\t},\n\t\t{\n\t\t\tid: 'item2',\n\t\t\ttitle: 'Card 2',\n\t\t\tbody: `\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n      `,\n\t\t},\n\t\t{\n\t\t\tid: 'item3',\n\t\t\ttitle: 'Card 3',\n\t\t\tbody: `\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n      `,\n\t\t},\n\t\t{\n\t\t\tid: 'item4',\n\t\t\ttitle: 'Card 4',\n\t\t\tbody: `\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n      `,\n\t\t},\n\t\t{\n\t\t\tid: 'item5',\n\t\t\ttitle: 'Long Card 5',\n\t\t\tbody: `\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit vero quo, veritatis ex atque voluptate dolore unde quas. Veritatis doloremque optio dignissimos enim voluptatum voluptas nemo suscipit commodi. Adipisci, ratione\n      `,\n\t\t},\n\t],\n};\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { trigger, transition, style, animate, keyframes } from '@angular/animations';\n\nexport const loaderIn = trigger('moveIn', [\n\ttransition(':enter', [\n\t\tstyle({ opacity: 0, transform: 'translateY(-3rem)' }),\n\t\tanimate(\n\t\t\t'1s ease-in-out',\n\t\t\tkeyframes([\n\t\t\t\tstyle({ offset: 0.2, opacity: 0.1, transform: 'translateY(-1rem)' }),\n\t\t\t\tstyle({ offset: 0.6, opacity: 0.4, transform: 'translateY(-0.1rem)' }),\n\t\t\t\tstyle({ offset: 1, opacity: 1, transform: 'none' }),\n\t\t\t])\n\t\t),\n\t]),\n]);\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { Injectable, Inject, InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { IToggler } from './settings/';\n\nexport function iniTogglerFn() {\n\treturn [] as IToggler[];\n}\n\nexport const INI_STATE = new InjectionToken<IToggler[]>('Accordion Initial Items Open state provider token', { factory: iniTogglerFn });\n\n@Injectable()\nexport class AccordionOpenService extends BehaviorSubject<IToggler[]> {\n\tconstructor(@Inject(INI_STATE) iniState: IToggler[] = []) {\n\t\tsuper(iniState);\n\t}\n\n\tget itemsOpen$() {\n\t\treturn this.asObservable();\n\t}\n\tget itemsOpenSnapshot() {\n\t\treturn this.value;\n\t}\n\n\tsetItemsOpen = (itemsStats: IToggler[]) => this.next(itemsStats);\n\n\tclose = () => {\n\t\tthis.complete();\n\t\tsuper.unsubscribe();\n\t};\n}\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { trigger, query, stagger, transition, animate, style, keyframes, state, AnimationTriggerMetadata } from '@angular/animations';\nexport { AnimationEvent as NgAnimationEvent } from '@angular/animations';\n\nexport const accordionAnimations: {\n\treadonly accordItemsIn: AnimationTriggerMetadata;\n\treadonly spinnerIn: AnimationTriggerMetadata;\n} = {\n\taccordItemsIn: trigger('accordItemsIn', [\n\t\ttransition('* => *', [\n\t\t\tquery(\n\t\t\t\t':leave',\n\t\t\t\t[\n\t\t\t\t\tstagger(-25, [\n\t\t\t\t\t\tanimate(\n\t\t\t\t\t\t\t'.3s',\n\t\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\ttransform: 'scale(0.7, 0.7) translateY(-3rem)',\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t\t],\n\t\t\t\t{ optional: true }\n\t\t\t),\n\t\t\tquery(\n\t\t\t\t':enter',\n\t\t\t\t[\n\t\t\t\t\tstyle({ opacity: 0, transform: 'scale(0.7, 0.7) translateY(-3rem)' }),\n\t\t\t\t\tstagger(25, [\n\t\t\t\t\t\tanimate(\n\t\t\t\t\t\t\t'.3s ease-out',\n\t\t\t\t\t\t\tkeyframes([\n\t\t\t\t\t\t\t\tstyle({ offset: 0, opacity: 0 }),\n\t\t\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\t\t\toffset: 0.2,\n\t\t\t\t\t\t\t\t\topacity: 0.1,\n\t\t\t\t\t\t\t\t\ttransform: 'scale(0.85, 0.85) translateY(-4rem)',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\t\t\toffset: 0.5,\n\t\t\t\t\t\t\t\t\topacity: 0.8,\n\t\t\t\t\t\t\t\t\ttransform: 'scale(0.9, 0.9) translateY(3rem)',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tstyle({ offset: 1, opacity: 1, transform: 'none' }),\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t),\n\t\t\t\t\t]),\n\t\t\t\t],\n\t\t\t\t{ optional: true }\n\t\t\t),\n\t\t]),\n\t]),\n\n\tspinnerIn: trigger('spinnerIn', [\n\t\ttransition('void => *', [\n\t\t\tquery(\n\t\t\t\t'.loader',\n\t\t\t\tanimate(\n\t\t\t\t\t'.5s ease-out',\n\t\t\t\t\tkeyframes([\n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\ttransformOrigin: 'bottom right',\n\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\ttransform: 'translateY(-100px) scale(0, 0)',\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\toffset: 0.8,\n\t\t\t\t\t\t\topacity: 0.6,\n\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\ttransform: 'translateY(40px) scale(0.5, 0.5)',\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tstyle({\n\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\theight: '*',\n\t\t\t\t\t\t\ttransform: 'translateY(0) scale(1, 1)',\n\t\t\t\t\t\t}),\n\t\t\t\t\t])\n\t\t\t\t),\n\t\t\t\t{ optional: true }\n\t\t\t),\n\t\t]),\n\t]),\n};\n\nexport const accordionItemAnimations: {\n\treadonly accordionItemBodyHeightCollapse: AnimationTriggerMetadata;\n} = {\n\taccordionItemBodyHeightCollapse: trigger('openClose', [\n\t\tstate(\n\t\t\t'closed',\n\t\t\tstyle({\n\t\t\t\theight: '0',\n\t\t\t\topacity: '0',\n\t\t\t\tvisibility: 'collapse',\n\t\t\t})\n\t\t),\n\t\tstate(\n\t\t\t'opened',\n\t\t\tstyle({\n\t\t\t\theight: '*',\n\t\t\t\topacity: '1',\n\t\t\t\tvisibility: 'visible',\n\t\t\t})\n\t\t),\n\t\ttransition('opened <=> closed', animate('.3s ease-out')),\n\t]),\n};\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { AccordionItemInternal } from './IAccordion';\n\nexport interface IToggler {\n\titemId: number;\n\tisOpen: boolean;\n}\n\nexport const pluckIToggler = ({ itemId, isOpen, ...rest }: AccordionItemInternal) => <IToggler>{ itemId, isOpen };\n\nexport const pluckOpenTogglesIdsToStr = (toggles: IToggler[]): string =>\n\ttoggles\n\t\t.filter((t) => t.isOpen === true)\n\t\t.map((t) => t.itemId)\n\t\t.join(',');\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { TemplateRef, SecurityContext } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { ItemTemplateContext } from './IAccordion';\n\nexport const imgBase64ToBlob = (Base64Image: any, imageType = 'image/png') => {\n\tconst parts = Base64Image.split(';base64,');\n\tconst decodedData = window.atob(parts[1]);\n\tconst uInt8Array = new Uint8Array(decodedData.length);\n\tfor (let i = 0; i < decodedData.length; ++i) {\n\t\tuInt8Array[i] = decodedData.charCodeAt(i);\n\t}\n\treturn new Blob([uInt8Array], { type: imageType });\n};\n\nexport const svgToBase64src = (rawSvg: string) => 'data:image/svg+xml;base64,' + btoa(rawSvg);\nexport const prepRes = (item: string, sanitizer: DomSanitizer) => sanitizer.bypassSecurityTrustResourceUrl(item);\nexport const sanitizeHTML = (item: string | object | undefined, sanitizer: DomSanitizer) => !!item && sanitizer.sanitize(SecurityContext.HTML, item);\nexport const getSvgSafeRes = (file: string, sanitizer: DomSanitizer) => prepRes(svgToBase64src(file), sanitizer);\nexport const getPngSafeRes = (file: string, sanitizer: DomSanitizer) => prepRes(URL.createObjectURL(imgBase64ToBlob(file)), sanitizer);\nexport const blobToSafeRes = (blob: Blob, sanitizer: DomSanitizer) => prepRes(URL.createObjectURL(blob), sanitizer);\n\nexport const bodyWithTmpl = (item: string | ItemTemplateContext): item is ItemTemplateContext => !!item && typeof item !== 'string' && !!item.itemTemplate;\nexport const getItemBodyTemplate = (item: string | ItemTemplateContext, defaultTmpl: TemplateRef<Element>) => (!!bodyWithTmpl(item) ? item.itemTemplate : defaultTmpl);\nexport const getItemBodyCtx = (item: string | ItemTemplateContext) => (bodyWithTmpl(item) && typeof item.itemBody === 'string' ? item.itemBody : item);\n","/* eslint-disable @angular-eslint/no-host-metadata-property */\n/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { AfterContentChecked, AfterViewInit, Directive, ElementRef, HostBinding, Renderer2, NgZone } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { getSvgSafeRes } from './settings/';\nimport { arrow_down, logo_svg } from './theming/icons-base';\n\nenum ImgClasses {\n\tLOGO = 'accord-item__header--start-img',\n\tENDING = 'accord-item__header--end-img',\n}\nenum ImgLoadClass {\n\tSUCCESS = 'img-loaded__success',\n\tALTER = 'img-load__alter',\n}\n\n@Directive({\n\tselector: '.accord-item__header-img',\n\thost: {\n\t\t'(load)': 'onLoad($event)',\n\t\t'(error)': 'onError($event)',\n\t\t'[attr.loading]': '\"lazy\"',\n\t},\n})\nexport class AccordionItemImgDirective implements AfterViewInit, AfterContentChecked {\n\t@HostBinding('attr.src') get src() {\n\t\treturn this._src;\n\t}\n\n\tprivate _nativeImgEl: HTMLImageElement;\n\tprivate _src: string | SafeResourceUrl | undefined;\n\tprivate _openSign: string | SafeResourceUrl | undefined;\n\tprivate _closeSign: string | SafeResourceUrl | undefined;\n\tprivate _baseLogoImg = getSvgSafeRes(logo_svg, this.sanitizer);\n\tprivate _baseChevronImg = getSvgSafeRes(arrow_down, this.sanitizer);\n\tprivate _isSet = false;\n\tprivate _needToRecheck = false;\n\n\tconstructor(private el: ElementRef<HTMLImageElement>, private renderer: Renderer2, private zone: NgZone, private sanitizer: DomSanitizer) {}\n\n\tngAfterViewInit() {\n\t\tthis._nativeImgEl = this.el.nativeElement;\n\t}\n\n\tngAfterContentChecked() {\n\t\tif (this._isSet && !this._needToRecheck) return;\n\t\tif (this._isSet && this._needToRecheck) return this._doOpenCloseSrcRecheck();\n\n\t\tif (this._isLogoImg()) {\n\t\t\t// this._src = this.readElDataSet('src') || this._baseLogoImg;\n\t\t\t// return this.setNoRecheck();\n\t\t\treturn this._setItemHeaderImgSafeSrc(this._readElDataSet('src') || this._baseLogoImg);\n\t\t} else if (this._isCloserImg()) {\n\t\t\tthis._openSign = this._readElDataSet('opensrc') ?? undefined;\n\t\t\tthis._closeSign = this._readElDataSet('closesrc') ?? undefined;\n\t\t\tif (!this._isImgOpenClose()) {\n\t\t\t\t// this._src = this._baseChevronImg;\n\t\t\t\t// return this.setNoRecheck();\n\t\t\t\treturn this._setItemHeaderImgSafeSrc(this._baseChevronImg);\n\t\t\t} else {\n\t\t\t\tif (this._openSign !== this._closeSign) {\n\t\t\t\t\tthis._needToRecheck = true;\n\t\t\t\t}\n\t\t\t\tthis._isSet = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tonLoad = ({ target, ...rest }: { target: HTMLImageElement; rest: any[] }) => this._setLoadSuccess(target);\n\tonError = ({ target, ...rest }: { target: HTMLImageElement; rest: any[] }) => {\n\t\tthis._setLoadAlter(target);\n\t\tif (target.classList.contains(ImgClasses.LOGO)) {\n\t\t\t// this.setItemHeaderImgSrc(target, this._baseLogoImg);\n\t\t\tthis._setItemHeaderImgSafeSrc(this._baseLogoImg);\n\t\t} else if (target.classList.contains(ImgClasses.ENDING)) {\n\t\t\t// this.setItemHeaderImgSrc(target, this._baseChevronImg);\n\t\t\tthis._setItemHeaderImgSafeSrc(this._baseChevronImg);\n\t\t} else {\n\t\t\treturn console.log('Not an Accordion Item header image');\n\t\t}\n\t};\n\n\tprivate _doOpenCloseSrcRecheck = () => this.zone.runOutsideAngular(() => (this._src = this._nativeImgEl?.classList.contains('open') ? this._closeSign : this._openSign));\n\tprivate _setItemHeaderImgSrc = (imgRef: HTMLImageElement, src: string | SafeResourceUrl) => this.renderer.setAttribute(imgRef, 'src', src as string);\n\tprivate _setItemHeaderImgSafeSrc = (src: string | SafeResourceUrl) => {\n\t\tthis._src = src;\n\t\treturn this._setNoRecheck();\n\t};\n\tprivate _readElDataSet = (attr: string) => this._nativeImgEl?.dataset[attr];\n\tprivate _setLoadSuccess = (target: HTMLImageElement) => {\n\t\ttarget.classList.add(ImgLoadClass.SUCCESS);\n\t\tthis._isSet = true;\n\t};\n\tprivate _setLoadAlter = (target: HTMLImageElement) => {\n\t\ttarget.classList.add(ImgLoadClass.ALTER);\n\t\tthis._setNoRecheck();\n\t};\n\tprivate _isImgOpenClose = () => !!this._closeSign && !!(this._closeSign as string).length && !!this._openSign && !!(this._openSign as string).length;\n\tprivate _isLogoImg = () => this._nativeImgEl?.classList.contains(ImgClasses.LOGO);\n\tprivate _isCloserImg = () => this._nativeImgEl?.classList.contains(ImgClasses.ENDING);\n\tprivate _setNoRecheck = () => {\n\t\tthis._isSet = true;\n\t\tthis._needToRecheck = false;\n\t};\n}\n","/* eslint-disable max-len */\n/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nexport const logo_svg =\n\t'<svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"white\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 0C2.23858 0 0 2.23858 0 5V45C0 47.7614 2.23858 50 5 50H45C47.7614 50 50 47.7614 50 45V5C50 2.23858 47.7614 0 45 0H5ZM11 10C10.4477 10 10 10.4477 10 11V15C10 15.5523 10.4477 16 11 16H39C39.5523 16 40 15.5523 40 15V11C40 10.4477 39.5523 10 39 10H11ZM10 23C10 22.4477 10.4477 22 11 22H39C39.5523 22 40 22.4477 40 23V27C40 27.5523 39.5523 28 39 28H11C10.4477 28 10 27.5523 10 27V23ZM11 34C10.4477 34 10 34.4477 10 35V39C10 39.5523 10.4477 40 11 40H32C32.5523 40 33 39.5523 33 39V35C33 34.4477 32.5523 34 32 34H11Z\"/></svg>';\n\nexport const arrow_down =\n\t'<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"white\" width=\"48px\" height=\"48px\"><path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"/><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/></svg>';\n","<!--\r\n/*!\r\n * @ngx-dummy/Accordion-Simple library\r\n * Simple accordion created for angular / ionic projects.\r\n * https://github.com/ngx-dummy/accordion-simple\r\n *\r\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\r\n * Published under GNU LGPLv3 License\r\n */\r\n-->\r\n<ng-container *ngTemplateOutlet=\"itemTpl; context: { $implicit: isOpen$ | async }\"></ng-container>\r\n\r\n<ng-template #itemTpl let-isOpen>\r\n\t<article class=\"accord-item\">\r\n\t\t<header class=\"accord-item__header\" [class.opened]=\"isOpen\">\r\n\t\t\t<ng-container *ngTemplateOutlet=\"headerDefaultTmpl; context: { $implicit: isOpen }\"></ng-container>\r\n\t\t</header>\r\n\t\t<section class=\"accord-item__body\" [@openClose]=\"isOpen ? 'opened' : 'closed'\" (@openClose.start)=\"startAnim($event)\" (@openClose.done)=\"doneAnim($event)\">\r\n\t\t\t<ng-container *ngTemplateOutlet=\"getItemBodyTemplate($any(item.body), bodyDefaultTmpl); context: { $implicit: getItemBodyCtx($any(item.body)) }\"></ng-container>\r\n\t\t</section>\r\n\t</article>\r\n</ng-template>\r\n\r\n<ng-template #headerDefaultTmpl let-isOpen>\r\n\t<div class=\"header--control accord-item__logo\">\r\n\t\t<span class=\"accord-item__header--start\">\r\n\t\t\t<img class=\"accord-item__header-img accord-item__header--start-img\" />\r\n\t\t\t<span *ngIf=\"item.itemNum\">{{ item.itemNum }}.</span>\r\n\t\t</span>\r\n\t</div>\r\n\t<div class=\"header--control accord-item__title\">\r\n\t\t{{ item.title }}\r\n\t</div>\r\n\t<div class=\"header--control accord-item__collapse\">\r\n\t\t<span class=\"accord-item__header--end\" [class.active]=\"isOpen\">\r\n\t\t\t<!-- NOTE: img 'src' attr is bound in the `accordion-item-img.directive` -->\r\n\t\t\t<img class=\"accord-item__header-img accord-item__header--end-img\" [ngClass]=\"{ open: isOpen, close: !isOpen }\" />\r\n\t\t</span>\r\n\t</div>\r\n</ng-template>\r\n\r\n<ng-template #bodyDefaultTmpl let-defctx>\r\n\t{{ defctx }}\r\n\t<ng-content select=\".accord-item__footer\"></ng-content>\r\n</ng-template>\r\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { of } from 'rxjs';\nimport { accordionItemAnimations, NgAnimationEvent } from './animations';\nimport { AccordionItemInternal, getItemBodyCtx, getItemBodyTemplate } from './settings/';\n\n@Component({\n\tselector: 'ngxd-accordion-item',\n\ttemplateUrl: './accordion-item.component.html',\n\tstyleUrls: ['./accordion-item.component.scss'],\n\tanimations: [accordionItemAnimations.accordionItemBodyHeightCollapse],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccordionItemComponent {\n\tgetItemBodyCtx = getItemBodyCtx!;\n\tgetItemBodyTemplate = getItemBodyTemplate!;\n\tisOpen$ = of(false);\n\titem: Partial<AccordionItemInternal>;\n\n\tstartAnim(e: NgAnimationEvent) {\n\t\t(<HTMLElement>e.element).style.willChange = 'height, opacity, visibility';\n\t\tconst classes = <DOMTokenList>e.element.classList;\n\t\tif (e.fromState === 'void') classes?.add('closed');\n\n\t\tif (e.fromState === 'closed' && e.toState === 'opened') classes.replace('closed', 'opened');\n\t}\n\n\tdoneAnim(e: NgAnimationEvent) {\n\t\t(<HTMLElement>e.element).style.willChange = 'auto';\n\t\tconst classes = <DOMTokenList>e.element.classList;\n\t\tif (e.fromState == 'opened' && e.toState == 'closed') classes.replace('opened', 'closed');\n\t}\n}\n","/* eslint-disable @angular-eslint/no-host-metadata-property */\n/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { Directive, ElementRef, Output, EventEmitter, AfterViewInit, Input, Renderer2, Inject, OnInit, Host, ChangeDetectorRef, OnDestroy } from '@angular/core';\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subject } from 'rxjs';\nimport { filter, tap, pluck, map, takeUntil } from 'rxjs/operators';\n\nimport { AccordionItemComponent } from './accordion-item.component';\nimport { AccordionOpenService } from './accordion-open.service';\nimport { NgAnimationEvent } from './animations';\nimport { IToggler, IAccordionItemStyling, AccordionItem, AccordionItemInternal, ItemTemplateContext, sanitizeHTML } from './settings/';\n\n@Directive({\n\tselector: '[ngxdAccordionItem]',\n\thost: {\n\t\t'[class.opened]': 'isOpen',\n\t\t'(dblclick)': 'onDClick([$event.target, $event.currentTarget])',\n\t\t'(click)': 'onClick([$event.target, $event.currentTarget])',\n\t},\n})\nexport class AccordionItemDirective implements OnInit, AfterViewInit, OnDestroy {\n\t@Input('ngxdAccordionItem') item!: AccordionItemInternal;\n\t@Input('styling') itemStyles: IAccordionItemStyling = {\n\t\theadHeight: '50px',\n\t\theadBgColor: '#ccc',\n\t\theadColor: '#fff',\n\t\tbodyBgColor: '#fff',\n\t\tbodyColor: '#000',\n\t\tfontSize: '10px',\n\t\tbodyPadding: '0',\n\t};\n\t@Input() logo: string;\n\t@Input() openSign: string;\n\t@Input() closeSign: string;\n\t@Input() bodyDblclkClose = false;\n\t@Input() isNumbered = false;\n\t@Output() toggled: EventEmitter<IToggler> = new EventEmitter();\n\tisOpen = false;\n\tprivate hostDestroy$$: Subject<void> = new Subject();\n\n\tconstructor(\n\t\t@Inject(AccordionItemComponent) private hostCmp: AccordionItemComponent,\n\t\t@Inject(ElementRef) private hostElRef: ElementRef<HTMLElement>,\n\t\t@Host() private itemStatusSvc: AccordionOpenService,\n\t\tprivate render: Renderer2,\n\t\tprivate sanitizer: DomSanitizer,\n\t\tprivate cd: ChangeDetectorRef\n\t) {}\n\n\tngOnInit() {\n\t\tthis.hostCmp.item = {\n\t\t\t...this.item,\n\t\t\titemNum: this.isNumbered ? +this.item.itemId + 1 : null,\n\t\t\tbody:\n\t\t\t\ttypeof this.item.body === 'string'\n\t\t\t\t\t? sanitizeHTML(this.item.body, this.sanitizer)\n\t\t\t\t\t: ({\n\t\t\t\t\t\t\titemTemplate: this.item.body?.itemTemplate,\n\t\t\t\t\t\t\titemBody: sanitizeHTML(this.item.body?.itemBody, this.sanitizer),\n\t\t\t\t\t  } as ItemTemplateContext),\n\t\t} as Partial<AccordionItem>;\n\n\t\tthis.hostCmp.isOpen$ = this.itemStatusSvc.itemsOpen$.pipe(\n\t\t\ttakeUntil(this.hostDestroy$$),\n\t\t\tfilter((val) => !!val && !!val.length),\n\t\t\tmap((toggles: IToggler[]) => toggles.find(({ itemId }) => itemId === +this.item.itemId)!),\n\t\t\tpluck<IToggler, 'isOpen'>('isOpen'),\n\t\t\ttap((isOpen = false) => (this.isOpen = isOpen))\n\t\t);\n\t}\n\n\tngAfterViewInit() {\n\t\tconst nativeEl = this.hostElRef.nativeElement;\n\t\tconst itemEl = nativeEl.getElementsByClassName('accord-item').item(0) as HTMLElement;\n\t\tconst headEl = nativeEl.getElementsByClassName('accord-item__header').item(0) as HTMLElement;\n\t\tconst bodyEl = nativeEl.getElementsByClassName('accord-item__body').item(0) as HTMLElement;\n\n\t\t{\n\t\t\t/** set up the accordion item header images\\' sources */\n\t\t\tconst headElLogoImgEl = headEl.getElementsByClassName('accord-item__header--start-img').item(0) as HTMLImageElement;\n\t\t\tconst headElCloserImgEl = headEl.getElementsByClassName('accord-item__header--end-img').item(0) as HTMLImageElement;\n\t\t\tthis.logo && this.render.setAttribute(headElLogoImgEl, 'data-src', this.logo);\n\t\t\tthis.openSign && this.render.setAttribute(headElCloserImgEl, 'data-opensrc', this.openSign);\n\t\t\tthis.closeSign && this.render.setAttribute(headElCloserImgEl, 'data-closesrc', this.closeSign);\n\t\t\tthis.cd.detectChanges();\n\t\t}\n\n\t\tthis.render.setStyle(itemEl, 'margin', this.itemStyles.margin ?? '0');\n\t\tthis.render.setStyle(itemEl, 'padding', this.itemStyles.padding ?? '0');\n\t\tthis.itemStyles.font && this.render.setStyle(itemEl, 'font', this.itemStyles.font);\n\t\tthis.itemStyles.fontSize && this.render.setStyle(itemEl, 'font-size', this.itemStyles.fontSize);\n\t\tthis.itemStyles.fontStyle && this.render.setStyle(itemEl, 'font-style', this.itemStyles.fontStyle);\n\t\tthis.itemStyles.fontFamily && this.render.setStyle(itemEl, 'font-family', this.itemStyles.fontFamily);\n\t\tthis.render.setStyle(itemEl, 'margin-bottom', this.itemStyles.marginBottom);\n\t\tthis.render.setStyle(itemEl, 'margin-top', this.itemStyles.marginTop);\n\t\tthis.itemStyles.headBgColor && nativeEl.style.setProperty('--ngxd-head-item-color', this.itemStyles.headBgColor);\n\n\t\tthis.itemStyles.headHeight && this.render.setStyle(headEl, 'height', this.itemStyles.headHeight);\n\t\tthis.itemStyles.headFont && this.render.setStyle(headEl, 'font', this.itemStyles.headFont);\n\t\tthis.render.setStyle(headEl, 'font-size', this.itemStyles.headFontSize ?? '1.1rem');\n\t\tthis.render.setStyle(headEl, 'color', this.itemStyles.headColor ?? '#ccc');\n\n\t\tthis.render.setStyle(bodyEl, 'background-color', this.itemStyles.bodyBgColor ?? 'rgba(200, 200, 200, 0.2)');\n\t\tthis.render.setStyle(bodyEl, 'color', this.itemStyles.bodyColor ?? '#000');\n\t\tthis.render.setStyle(bodyEl, 'padding', this.itemStyles.bodyPadding ?? '.1rem');\n\t\tthis.render.setStyle(bodyEl, 'margin', this.itemStyles.bodyMargin ?? '0');\n\t\tthis.itemStyles.bodyFont && this.render.setStyle(bodyEl, 'font', this.itemStyles.bodyFont);\n\t\tthis.render.setStyle(bodyEl, 'font-size', this.itemStyles.bodyFontSize ?? '1rem');\n\t\tthis.itemStyles.bodyTextAlign && this.render.setStyle(bodyEl, 'text-align', this.itemStyles.bodyTextAlign);\n\n\t\tthis.render.setStyle(bodyEl, 'cursor', this.bodyDblclkClose ? 'grab' : 'default');\n\t}\n\n\tngOnDestroy() {\n\t\tthis.hostDestroy$$.next();\n\t\tthis.hostDestroy$$.complete();\n\t}\n\n\tonClick = ([{ outerHTML }, { dataset }]: [{ outerHTML: string }, { dataset: any }]) => (outerHTML?.includes('header') ? this._handleClick({ ...dataset }) : void 0);\n\tonDClick = ([{ outerHTML }, { dataset }]: [{ outerHTML: string }, { dataset: any }]) => (outerHTML?.includes('accord-item__body') ? this._handleClick({ ...dataset }) : void 0);\n\n\tprivate _handleClick = ({ idx, ...rest } = { idx: -1 }) => this._toggle(+idx);\n\tprivate _toggle = (itemId: number) => this.toggled.emit({ itemId, isOpen: !this.isOpen });\n}\n","<!--\n/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */ \n-->\n<div class=\"accordion\">\n\t<ng-container *ngIf=\"!!accordionItems; then itemsTmpl; else $any(loadingTpl)\"> </ng-container>\n</div>\n\n<ng-template #itemsTmpl>\n\t<ng-container *ngFor=\"let item of accordionItems; trackBy: trackByFn\" [ngTemplateOutlet]=\"accordItemTmpl\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-container>\n</ng-template>\n\n<ng-template #accordItemTmpl let-item>\n\t<ngxd-accordion-item\n\t\t[ngxdAccordionItem]=\"item\"\n\t\t[isNumbered]=\"_isNumbered\"\n\t\t[bodyDblclkClose]=\"_bodyDblclkClose\"\n\t\t[openSign]=\"openSign\"\n\t\t[closeSign]=\"closeSign\"\n\t\t[logo]=\"listLogo\"\n\t\t[styling]=\"_itemStyle\"\n\t\t[attr.data-idx]=\"item.itemId\"\n\t\t[id]=\"item.id\"\n\t\t(toggled)=\"onItemToggled($event)\"\n\t\t@accordItemsIn\n\t></ngxd-accordion-item>\n</ng-template>\n\n<ng-template #defloadingTpl>\n\t<style>\n\t\t.accordion-default-loader--tmpl {\n\t\t\tdisplay: block;\n\t\t\tborder-radius: 50%;\n\t\t\tbackground-color: transparent;\n\t\t\tmin-height: 50px;\n\t\t\tmin-width: 50px;\n\t\t}\n\t\t.accordion-default-loader--tmpl > svg {\n\t\t\tfill: var(--dark-bg);\n\t\t\ttransform: rotate(90deg);\n\t\t}\n\t\t.accordion-default-loader--tmpl > svg rect:first-of-type {\n\t\t\tfill: var(--darker-color);\n\t\t}\n\t\t.accordion-default-loader--tmpl > svg rect:nth-of-type(2) {\n\t\t\tfill: var(--accent-color);\n\t\t}\n\t\t.accordion-default-loader--tmpl > svg rect:nth-of-type(3) {\n\t\t\tfill: var(--dark-blue-color);\n\t\t}\n\t</style>\n\t<div class=\"accordion-default-loader--tmpl\" @spinnerIn>\n\t\t<svg width=\"51px\" height=\"50px\" viewBox=\"0 0 51 50\">\n\t\t\t<rect y=\"0\" width=\"13\" height=\"50\">\n\t\t\t\t<animate attributeName=\"height\" values=\"50;10;50\" begin=\"0s\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t\t<animate attributeName=\"y\" values=\"0;20;0\" begin=\"0s\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t</rect>\n\t\t\t<rect x=\"19\" y=\"0\" width=\"13\" height=\"50\">\n\t\t\t\t<animate attributeName=\"height\" values=\"50;10;50\" begin=\"0.2s\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t\t<animate attributeName=\"y\" values=\"0;20;0\" begin=\"0.2s\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t</rect>\n\t\t\t<rect x=\"38\" y=\"0\" width=\"13\" height=\"50\">\n\t\t\t\t<animate attributeName=\"height\" values=\"50;10;50\" begin=\"0.4s\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t\t<animate attributeName=\"y\" values=\"0;20;0\" begin=\"0.4s\" dur=\"1s\" repeatCount=\"indefinite\" />\n\t\t\t</rect>\n\t\t</svg>\n\t</div>\n</ng-template>\n","/*!\r\n * @ngx-dummy/Accordion-Simple library\r\n * Simple accordion created for angular / ionic projects.\r\n * https://github.com/ngx-dummy/accordion-simple\r\n *\r\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\r\n * Published under GNU LGPLv3 License\r\n */\r\nimport {\r\n\tComponent,\r\n\tInput,\r\n\tHostBinding,\r\n\tChangeDetectionStrategy,\r\n\tOnInit,\r\n\tSelf,\r\n\tSimpleChanges,\r\n\tOnChanges,\r\n\tOnDestroy,\r\n\tTemplateRef,\r\n\tViewChild,\r\n\tElementRef,\r\n\tRenderer2,\r\n} from '@angular/core';\r\nimport { map, filter } from 'rxjs/operators';\r\n\r\nimport { AccordionOpenService } from './accordion-open.service';\r\nimport { accordionAnimations } from './animations';\r\nimport { Accordion, IAccordionStyling, IAccordionItemStyling, IToggler, AccordionItemInternal, AccordionInternal, pluckIToggler, pluckOpenTogglesIdsToStr } from './settings/';\r\n\r\n@Component({\r\n\tselector: 'ngxd-accordion',\r\n\texportAs: 'ngxdAccordion',\r\n\ttemplateUrl: './accordion.component.html',\r\n\tstyleUrls: ['./accordion.component.scss'],\r\n\tanimations: [accordionAnimations.accordItemsIn, accordionAnimations.spinnerIn],\r\n\tviewProviders: [AccordionOpenService],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AccordionComponent implements OnInit, OnChanges, OnDestroy {\r\n\tstatic idx = 0;\r\n\t@ViewChild('defloadingTpl', { read: TemplateRef, static: true }) private defloadingTpl!: TemplateRef<Element>;\r\n\t@HostBinding('attr.data-items-opened') _openedItems: string;\r\n\t@HostBinding('attr.id') get id() {\r\n\t\treturn `${this.attributes.id}`;\r\n\t}\r\n\t@HostBinding('attr.name') get name() {\r\n\t\treturn this.attributes.name;\r\n\t}\r\n\t@Input() set accordionList(acc: Accordion) {\r\n\t\tlet [name, id] = [(!!acc && !!acc['name']?.length && acc.name) || 'Sample-Accordion', (!!acc && !!acc['id'] && acc.id) || `accordion_${++AccordionComponent.idx}`];\r\n\t\tthis._accord = Object.assign(\r\n\t\t\t{ id, name },\r\n\t\t\t{\r\n\t\t\t\titems: acc?.items.map(\r\n\t\t\t\t\t(item, i) =>\r\n\t\t\t\t\t\t<AccordionItemInternal>{\r\n\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\tid: !!item.id && typeof item.id === 'string' ? item.id : `${id}__accord-item_${i}`,\r\n\t\t\t\t\t\t\titemId: i,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t),\r\n\t\t\t}\r\n\t\t) as AccordionInternal;\r\n\t}\r\n\tget accordionItems(): AccordionItemInternal[] {\r\n\t\treturn this._accord?.items;\r\n\t}\r\n\t@Input() openSign: string;\r\n\t@Input() closeSign: string;\r\n\t@Input() listLogo: string;\r\n\t@Input() accordionStyling: IAccordionStyling = {\r\n\t\tnumberedItems: false,\r\n\t\tisMultiShow: false,\r\n\t\tbodyDblclkCloseItems: false,\r\n\t\tmaxWidth: '100%',\r\n\t\titemsGuts: '1rem',\r\n\t\tmargin: '0',\r\n\t\titemStyling: {\r\n\t\t\theadBgColor: '#4197b2',\r\n\t\t\theadColor: '#fff',\r\n\t\t\tbodyBgColor: '#fff',\r\n\t\t\tbodyColor: '#000',\r\n\t\t\tmargin: '0',\r\n\t\t\tpadding: '0',\r\n\t\t},\r\n\t};\r\n\t@Input() set loadingTpl(val: TemplateRef<Element>) {\r\n\t\tthis._loadingTpl = val || this.defloadingTpl;\r\n\t}\r\n\tget loadingTpl(): TemplateRef<Element> {\r\n\t\treturn this._loadingTpl ?? this.defloadingTpl;\r\n\t}\r\n\t_bodyDblclkClose = false;\r\n\t_itemStyle: IAccordionItemStyling;\r\n\t_isNumbered = false;\r\n\r\n\tprivate _loadingTpl: TemplateRef<Element>;\r\n\tprivate _accord: AccordionInternal;\r\n\tprivate multiSelect = false;\r\n\r\n\tconstructor(@Self() private itemsOpenSvc: AccordionOpenService, private hostEl: ElementRef<Element>, private renderer: Renderer2) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis._bodyDblclkClose = !!this.accordionStyling.bodyDblclkCloseItems ?? false;\r\n\t\tthis.multiSelect = !!this.accordionStyling.isMultiShow ?? false;\r\n\t\tthis.itemsOpenSvc.itemsOpen$\r\n\t\t\t.pipe(\r\n\t\t\t\tfilter((val) => !!val?.length),\r\n\t\t\t\tmap(pluckOpenTogglesIdsToStr)\r\n\t\t\t)\r\n\t\t\t.subscribe((ids) => (this._openedItems = ids));\r\n\r\n\t\tthis._isNumbered = this.accordionStyling.numberedItems ?? false;\r\n\t\tthis._bodyDblclkClose = this.accordionStyling.bodyDblclkCloseItems ?? false;\r\n\r\n\t\tlet itemStyles: IAccordionItemStyling = Array.isArray(this.accordionStyling.itemStyling)\r\n\t\t\t? this.accordionStyling.itemStyling.reduce((accu = {}, curr) => ({ ...accu, ...curr }))\r\n\t\t\t: { ...this.accordionStyling.itemStyling };\r\n\r\n\t\tconst itemsGuts = this.accordionStyling.itemsGuts ?? 0;\r\n\t\titemStyles = {\r\n\t\t\tpadding: '0',\r\n\t\t\tmarginBottom: itemsGuts,\r\n\t\t\tmarginTop: itemsGuts,\r\n\t\t\t...itemStyles,\r\n\t\t};\r\n\t\tthis._itemStyle = Object.entries(itemStyles)\r\n\t\t\t.map(([key, val]) => ({\r\n\t\t\t\t[key]: typeof val === 'number' ? `${val}px` : val,\r\n\t\t\t}))\r\n\t\t\t.reduce((accu, val) => ({ ...accu, ...val }));\r\n\r\n\t\tconst accordEl = this.hostEl.nativeElement;\r\n\t\tthis.renderer.setStyle(accordEl, 'max-width', this.accordionStyling.maxWidth ?? '100%');\r\n\t\tthis.renderer.setStyle(accordEl, 'margin', this.accordionStyling.margin ?? '0');\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges) {\r\n\t\tObject.keys(changes).forEach((prop) => {\r\n\t\t\tif (prop === 'accordionList' && changes[prop].previousValue !== changes[prop].currentValue) this.itemsOpenSvc.setItemsOpen(this.accordionItems?.map(pluckIToggler));\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tthis.itemsOpenSvc.close();\r\n\t}\r\n\r\n\tonItemToggled = ({ itemId, isOpen }: IToggler = { itemId: 0, isOpen: false }) =>\r\n\t\tthis.itemsOpenSvc.setItemsOpen(\r\n\t\t\tthis.itemsOpenSvc.itemsOpenSnapshot.map(\r\n\t\t\t\t({ itemId: eId, isOpen: opened }) =>\r\n\t\t\t\t\t(eId === +itemId\r\n\t\t\t\t\t\t? { itemId, isOpen }\r\n\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\titemId: eId,\r\n\t\t\t\t\t\t\t\tisOpen: this.multiSelect ? opened : false,\r\n\t\t\t\t\t\t  }) as IToggler\r\n\t\t\t)\r\n\t\t);\r\n\r\n\tpublic closeAll = () => this.accordionItems?.forEach(({ itemId, ...rest }) => this.onItemToggled({ itemId, isOpen: false }));\r\n\r\n\tpublic trackByFn = (_ind: number, { itemId, ...rest }: any) => +itemId;\r\n\r\n\tprivate get attributes(): Partial<Accordion> {\r\n\t\tconst { id, name } = this._accord;\r\n\t\treturn { id, name };\r\n\t}\r\n}\r\n","<!-- \n  /*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\n -->\n<div class=\"mdc-layout-grid\">\n\t<div class=\"mdc-layout-grid__inner mb-1\">\n\t\t<div class=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-6 mdc-layout-grid__cell--span-12-phone mdc-layout-grid__cell--span-12-tablet align\">\n\t\t\t<h2 class=\"text-center app-title\">{{ title }}</h2>\n\t\t</div>\n\t\t<div class=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-6 mdc-layout-grid__cell--span-12-phone mdc-layout-grid__cell--span-12-tablet align\">\n\t\t\t<div class=\"mdc-touch-target-wrapper\">\n\t\t\t\t<button class=\"mdc-button mdc-button--touch light-bg\" (click)=\"acc1.closeAll(); acc2.closeAll()\">\n\t\t\t\t\t<div class=\"mdc-button__ripple\"></div>\n\t\t\t\t\t<span>Close All</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"mdc-layout-grid__inner mb-1\">\n\t\t<div class=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-12\">\n\t\t\t<ngxd-accordion #acc1=\"ngxdAccordion\" [accordionList]=\"accordList2\" [accordionStyling]=\"styling\" openSign=\"plus.png\" closeSign=\"minus.png\"></ngxd-accordion>\n\t\t</div>\n\t</div>\n\t<div class=\"mdc-layout-grid__inner\">\n\t\t<div class=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-12\">\n\t\t\t<ngxd-accordion\n\t\t\t\t#acc2=\"ngxdAccordion\"\n\t\t\t\t[loadingTpl]=\"simpleLoader\"\n\t\t\t\t[accordionList]=\"accordList$ | async\"\n\t\t\t\t[accordionStyling]=\"styling1\"\n\t\t\t\tlistLogo=\"list_white_48dp.png\"\n\t\t\t></ngxd-accordion>\n\t\t</div>\n\t</div>\n</div>\n\n<ng-template #simpleLoader>\n\t<style>\n\t\t:host {\n\t\t\t--spin-bg: #46cccc;\n\t\t\t--spin-in-bg: #4adada;\n\t\t}\n\n\t\t.container-transparent {\n\t\t\tbackground: transparent;\n\t\t\tdisplay: grid;\n\t\t\tmin-height: 6rem;\n\t\t\twidth: 100%;\n\t\t\tplace-content: center;\n\t\t}\n\n\t\t.loader {\n\t\t\twidth: 3rem;\n\t\t\theight: 3rem;\n\t\t\tborder: 0.3rem solid var(--spin-bg);\n\t\t\tanimation: spin 2s infinite ease-in-out;\n\t\t}\n\n\t\t.loader-inner {\n\t\t\tvertical-align: top;\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 100%;\n\t\t\tbackground-color: var(--spin-in-bg);\n\t\t\tanimation: spin-in 2s infinite ease-in;\n\t\t}\n\n\t\t@keyframes spin {\n\t\t\t0% {\n\t\t\t\topacity: 0.4;\n\t\t\t\ttransform: rotate(0deg);\n\t\t\t}\n\n\t\t\t25% {\n\t\t\t\topacity: 0.6;\n\t\t\t\ttransform: rotate(180deg);\n\t\t\t}\n\n\t\t\t50% {\n\t\t\t\topacity: 0.9;\n\t\t\t\ttransform: rotate(180deg);\n\t\t\t}\n\n\t\t\t75% {\n\t\t\t\topacity: 1;\n\t\t\t\ttransform: rotate(390deg);\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 0.9;\n\t\t\t\ttransform: rotate(360deg);\n\t\t\t}\n\t\t}\n\n\t\t@keyframes spin-in {\n\t\t\t0% {\n\t\t\t\topacity: 0.4;\n\t\t\t\theight: 0%;\n\t\t\t}\n\n\t\t\t25% {\n\t\t\t\topacity: 0.6;\n\t\t\t\theight: 0%;\n\t\t\t}\n\n\t\t\t50% {\n\t\t\t\topacity: 0.9;\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\t75% {\n\t\t\t\topacity: 1;\n\t\t\t\theight: 100%;\n\t\t\t}\n\n\t\t\t100% {\n\t\t\t\topacity: 0.9;\n\t\t\t\theight: 0%;\n\t\t\t}\n\t\t}\n\t</style>\n\t<div class=\"container-transparent\" @moveIn>\n\t\t<span class=\"loader\"><span class=\"loader-inner\"></span></span>\n\t</div>\n</ng-template>\n\n<ng-template #simpleBodyTmpl let-ctxcontent>\n\t<style>\n\t\t.tmpl-item-container {\n\t\t\tfont-family: 'Roboto', sans-serif !important;\n\t\t}\n\n\t\t.head6 {\n\t\t\tfont-style: italic;\n\t\t\tmargin: 1.1rem;\n\t\t}\n\n\t\t.subtitle1 {\n\t\t\tcolor: var(--mdc-theme-text-primary-on-dark, rgba(250, 250, 250, 0.9));\n\t\t\ttext-align: start;\n\t\t\tmargin: 0.1rem 1rem;\n\t\t\tfont-family: Lato;\n\t\t}\n\n\t\t.subtitle2 {\n\t\t\tcolor: var(--mdc-theme-text-primary-on-light, rgba(250, 250, 250, 0.9));\n\t\t\ttext-align: start;\n\t\t\tmargin: 0.1rem 1rem;\n\t\t}\n\n\t\t.card-media__items {\n\t\t\tposition: absolute;\n\t\t\tbottom: 1rem;\n\t\t\tleft: 0.4rem;\n\t\t}\n\n\t\t.tmpl-item-logo {\n\t\t\tbackground-image: url('myTwitLogo.png');\n\t\t}\n\n\t\t.tmpl-main-content {\n\t\t\tbackground-color: floralwhite;\n\t\t\tfont-size: medium;\n\t\t}\n\n\t\t.body2 {\n\t\t\tmargin: 0.4rem 1rem;\n\t\t}\n\n\t\t.tmpl-footer {\n\t\t\tbackground-color: lavenderblush;\n\t\t\tcolor: black;\n\t\t\tfont-size: xx-small;\n\t\t}\n\n\t\t@media screen and (max-width: 500px) {\n\t\t\t.head6 {\n\t\t\t\tfont-size: 1rem;\n\t\t\t\tmargin: 0.1rem;\n\t\t\t}\n\n\t\t\t.subtitle1 {\n\t\t\t\tfont-size: 0.4rem;\n\t\t\t}\n\n\t\t\t.subtitle2 {\n\t\t\t\tfont-size: 0.2rem;\n\t\t\t}\n\n\t\t\t.flex-card__tmpl {\n\t\t\t\tdisplay: grid;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tflex-wrap: wrap !important;\n\t\t\t}\n\t\t}\n\t</style>\n\t<ng-container ngProjectAs=\"tmpl-item-card__container\">\n\t\t<div class=\"mdc-card tmpl-item-container\">\n\t\t\t<div class=\"tmpl-header\">\n\t\t\t\t<h6 class=\"mdc-typography mdc-typography--headline6 head6\">Custom templated Item sample</h6>\n\t\t\t</div>\n\t\t\t<div class=\"mdc-card__primary-action\" tabindex=\"0\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"mdc-card__media mdc-card__media--16-9 demo-card__media tmpl-item-logo\"\n\t\t\t\t\tonclick=\"location.href='//twitter.com/intent/tweet?ref_src=twsrc%5Etfw&original_referer=https%3A%2F%2Fngx-dummy.github.io%2Faccordion-simple%2F&url=https%3A%2F%2Fgithub.com%2Fvovansuper%2Faccordion-simple&text=ngx-dummy Accordion simple component'\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"mdc-card__media-content demo-card__media-content\">\n\t\t\t\t\t\t<div class=\"card-media__items\">\n\t\t\t\t\t\t\t<h3 class=\"mdc-typography mdc-typography--subtitle1 subtitle1\">by Vladimir Ovsyukov</h3>\n\t\t\t\t\t\t\t<h6 class=\"mdc-typography mdc-typography--subtitle2 subtitle1\">https://github.com/VovanSuper</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mdc-typography mdc-typography--body2 mt-1 mb-1 body2\" [innerHTML]=\"ctxcontent\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"mdc-card__actions flex-card__tmpl\">\n\t\t\t\t<div class=\"mdc-card__action-buttons\">\n\t\t\t\t\t<button class=\"mdc-button mdc-card__action mdc-card__action--button\" onclick=\"location.href='//github.com/ngx-dummy/accordion-simple'\">\n\t\t\t\t\t\t<span class=\"mdc-button__ripple\"></span>\n\t\t\t\t\t\t<span class=\"material-icons\">description</span>\n\t\t\t\t\t\tDocs\n\t\t\t\t\t</button>\n\t\t\t\t\t<button class=\"mdc-button mdc-card__action mdc-card__action--button\" onclick=\"location.href='//github.com/VovanSuper' \" aria-label=\"Follow VovanSuper on GitHub\">\n\t\t\t\t\t\t<span class=\"mdc-button__ripple\"></span>\n\t\t\t\t\t\t<span class=\"material-icons\">thumb_up_alt</span>\n\t\t\t\t\t\tFollow\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"mdc-card__action-icons\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"mdc-icon-button mdc-card__action mdc-card__action--icon--unbounded\"\n\t\t\t\t\t\taria-pressed=\"false\"\n\t\t\t\t\t\taria-label=\"Sponsor\"\n\t\t\t\t\t\ttitle=\"Sponsor\"\n\t\t\t\t\t\tonclick=\"location.href='//github.com/sponsors/ngx-dummy'\"\n\t\t\t\t\t\tdata-icon=\"octicon-heart\"\n\t\t\t\t\t\taria-label=\"Sponsor Me on GitHub\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<i class=\"material-icons mdc-icon-button__icon mdc-icon-button__icon--on\">favorite</i>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclass=\"mdc-icon-button material-icons mdc-card__action mdc-card__action--icon--unbounded\"\n\t\t\t\t\t\ttitle=\"Share\"\n\t\t\t\t\t\tdata-mdc-ripple-is-unbounded=\"true\"\n\t\t\t\t\t\tonclick=\"location.href='//twitter.com/intent/tweet?ref_src=twsrc%5Etfw&original_referer=https%3A%2F%2Fngx-dummy.github.io%2Faccordion-simple%2F&url=https%3A%2F%2Fgithub.com%2Fvovansuper%2Faccordion-simple&text=ngx-dummy Accordion simple component'\"\n\t\t\t\t\t>\n\t\t\t\t\t\tshare\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</ng-container>\n</ng-template>\n\n<ng-template #tmpl2 let-ctxcontent>\n\t<style scoped>\n\t\t.row {\n\t\t\tmargin-left: auto;\n\t\t\tmargin-right: auto;\n\t\t\tmargin-bottom: 20px;\n\t\t}\n\t\t.row .col {\n\t\t\tfloat: left;\n\t\t\t-webkit-box-sizing: border-box;\n\t\t\tbox-sizing: border-box;\n\t\t\tpadding: 0 0.75rem;\n\t\t\tmin-height: 1px;\n\t\t}\n\t\t.row .col.s12 {\n\t\t\twidth: 100%;\n\t\t\tmargin-left: auto;\n\t\t\tleft: auto;\n\t\t\tright: auto;\n\t\t}\n\t\t.row:after {\n\t\t\tcontent: '';\n\t\t\tdisplay: table;\n\t\t\tclear: both;\n\t\t}\n\t\t.card {\n\t\t\tposition: relative;\n\t\t\tmargin: 0.5rem 0 1rem 0;\n\t\t\tbackground-color: #fff;\n\t\t\t-webkit-transition: -webkit-box-shadow 0.25s;\n\t\t\ttransition: -webkit-box-shadow 0.25s;\n\t\t\ttransition: box-shadow 0.25s;\n\t\t\ttransition: box-shadow 0.25s, -webkit-box-shadow 0.25s;\n\t\t\tborder-radius: 2px;\n\t\t}\n\t\t.card.large .card-image {\n\t\t\tmax-height: 60%;\n\t\t\tposition: relative;\n\t\t\toverflow: hidden;\n\t\t}\n\t\t.card .card-image img {\n\t\t\tdisplay: block;\n\t\t\tborder-radius: 2px 2px 0 0;\n\t\t\tposition: relative;\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t\ttop: 0;\n\t\t\tbottom: 0;\n\t\t\twidth: 100%;\n\t\t}\n\t\t.card .card-image .card-title {\n\t\t\tfont-size: 24px;\n\t\t\tfont-weight: 300;\n\t\t\tcolor: #fff;\n\t\t\tposition: absolute;\n\t\t\tbottom: 0;\n\t\t\tleft: 0;\n\t\t\tmax-width: 100%;\n\t\t\tpadding: 24px;\n\t\t}\n\t\t.btn-floating.halfway-fab {\n\t\t\tposition: absolute;\n\t\t\tright: 24px;\n\t\t\tbottom: -20px;\n\t\t}\n\t\t.waves-effect {\n\t\t\tposition: relative;\n\t\t\tcursor: pointer;\n\t\t\tdisplay: inline-block;\n\t\t\toverflow: hidden;\n\t\t\t-webkit-user-select: none;\n\t\t\t-moz-user-select: none;\n\t\t\t-ms-user-select: none;\n\t\t\tuser-select: none;\n\t\t\t-webkit-tap-highlight-color: transparent;\n\t\t\tvertical-align: middle;\n\t\t\tz-index: 1;\n\t\t\t-webkit-transition: 0.3s ease-out;\n\t\t\ttransition: 0.3s ease-out;\n\t\t}\n\t\t.btn-floating {\n\t\t\tfont-size: 14px;\n\t\t\toutline: 0;\n\t\t\tdisplay: inline-block;\n\t\t\tcolor: #fff;\n\t\t\tposition: relative;\n\t\t\toverflow: hidden;\n\t\t\tz-index: 1;\n\t\t\twidth: 40px;\n\t\t\theight: 40px;\n\t\t\tline-height: 40px;\n\t\t\tpadding: 0;\n\t\t\tbackground-color: #26a69a;\n\t\t\tborder-radius: 50%;\n\t\t\t-webkit-transition: background-color 0.3s;\n\t\t\ttransition: background-color 0.3s;\n\t\t\tcursor: pointer;\n\t\t\tvertical-align: middle;\n\t\t}\n\t\t.red {\n\t\t\tbackground-color: var(--mdc-theme-on-primary, #fff);\n\t\t}\n\t\t.card .card-content {\n\t\t\t/* overflow: hidden; */\n\t\t\tmax-height: 40%;\n\t\t\tmargin: 1rem;\n\t\t}\n\t\t.material-icons {\n\t\t\tfont-family: 'Material Icons';\n\t\t\tfont-weight: normal;\n\t\t\tfont-style: normal;\n\t\t\tfont-size: 24px;\n\t\t\tline-height: 1;\n\t\t\tletter-spacing: normal;\n\t\t\ttext-transform: none;\n\t\t\tdisplay: inline-block;\n\t\t\twhite-space: nowrap;\n\t\t\tword-wrap: normal;\n\t\t\tdirection: ltr;\n\t\t\t-webkit-font-feature-settings: 'liga';\n\t\t\t-webkit-font-smoothing: antialiased;\n\t\t}\n\t\ta.btn-floating[title='Share'] {\n\t\t\tbottom: 0.5rem;\n\t\t\tright: 1rem;\n\t\t\ttext-align: center;\n\t\t\tdisplay: grid;\n\t\t\tplace-content: center;\n\t\t}\n\t</style>\n\n\t<div class=\"container materializelikes\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"div col s12 l12 center-align\" style=\"font-size: 1.5rem; line-height: 110%; margin: 0.1rem; color: var(--darker-color)\">\n\t\t\t\tSample Accordion Item (alike one of materializecss)\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col s12\">\n\t\t\t\t<div class=\"row\">\n\t\t\t\t\t<div class=\"col s12 m12\">\n\t\t\t\t\t\t<div class=\"card large\">\n\t\t\t\t\t\t\t<div class=\"card-image\">\n\t\t\t\t\t\t\t\t<img src=\"myTwitLogo.png\" />\n\t\t\t\t\t\t\t\t<span class=\"card-title\">Simple material template Card</span>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclass=\"btn-floating halfway-fab waves-effect waves-light red\"\n\t\t\t\t\t\t\t\t\ttitle=\"Share\"\n\t\t\t\t\t\t\t\t\tdata-mdc-ripple-is-unbounded=\"true\"\n\t\t\t\t\t\t\t\t\tonclick=\"location.href='//twitter.com/intent/tweet?ref_src=twsrc%5Etfw&original_referer=https%3A%2F%2Fngx-dummy.github.io%2Faccordion-simple%2F&url=https%3A%2F%2Fgithub.com%2Fvovansuper%2Faccordion-simple&text=ngx-dummy Accordion simple component'\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i class=\"material-icons\">share</i>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"card-content\">\n\t\t\t\t\t\t\t\t<p>{{ ctxcontent }}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ng-template>\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { Component, ViewChild, TemplateRef, OnInit, AfterViewInit } from '@angular/core';\nimport { delay } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { MDCRipple } from '@material/ripple';\n\nimport { IAccordionStyling, Accordion } from '@ngx-dummy/accordion-simple/settings';\nimport { dummyAccordionList1 as list1, dummyAccordionList2 } from './helpers/dummy-data';\nimport { loaderIn } from './loader.anim';\n\n@Component({\n\tselector: 'app-root',\n\tanimations: [loaderIn],\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n\t@ViewChild('simpleBodyTmpl', { static: true }) simpleBodyTmpl: TemplateRef<HTMLElement>;\n\t@ViewChild('tmpl2', { static: true }) tmpl2: TemplateRef<HTMLElement>;\n\ttitle = 'Accordion Sample';\n\taccordList2: Accordion = null;\n\taccordList$ = of(dummyAccordionList2).pipe(delay(3000));\n\n\tstyling: IAccordionStyling = {\n\t\titemsGuts: '.1rem',\n\t\tmaxWidth: '99%',\n\t\tmargin: '.1rem',\n\t\tnumberedItems: true,\n\t\titemStyling: {\n\t\t\theadBgColor: '#89a',\n\t\t\theadColor: '#fff',\n\t\t\tmargin: '.1rem',\n\t\t\tbodyPadding: '1rem',\n\t\t\tbodyMargin: 1,\n\t\t},\n\t};\n\n\tstyling1: IAccordionStyling = {\n\t\t...this.styling,\n\t\titemsGuts: 0,\n\t\tnumberedItems: false,\n\t\tmargin: '0 auto',\n\t\tisMultiShow: true,\n\t\tmaxWidth: '94%',\n\t\tbodyDblclkCloseItems: true,\n\n\t\titemStyling: {\n\t\t\t...this.styling.itemStyling,\n\t\t\theadBgColor: 'darkcyan',\n\t\t\theadColor: 'yellow',\n\t\t\tbodyColor: '#aaffff',\n\t\t\tbodyBgColor: '#87a3d1',\n\t\t\tfont: 'Comic Sans MS',\n\t\t\tbodyPadding: 1,\n\t\t\tbodyMargin: 0,\n\t\t\tbodyTextAlign: 'left',\n\t\t\tmargin: 0,\n\t\t},\n\t};\n\n\tngOnInit() {\n\t\tthis.accordList2 = {\n\t\t\t...list1,\n\t\t\titems: [\n\t\t\t\t...list1.items\n\t\t\t\t\t.map((item) =>\n\t\t\t\t\t\titem.title.includes('Accordion Card 2')\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\t\titemTemplate: this.simpleBodyTmpl,\n\t\t\t\t\t\t\t\t\t\titemBody: item.body,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: { ...item }\n\t\t\t\t\t)\n\t\t\t\t\t.map((item) =>\n\t\t\t\t\t\titem.title.includes('Accordion Card 1')\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\t\t\t\titemTemplate: this.tmpl2,\n\t\t\t\t\t\t\t\t\t\titemBody: 'Lorem ipsum card ...',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: { ...item }\n\t\t\t\t\t),\n\t\t\t],\n\t\t};\n\t}\n\n\tngAfterViewInit() {\n\t\tconst btnRipple = document.querySelector('.mdc-button');\n\t\tconst ripple = new MDCRipple(btnRipple);\n\t\treturn () => ripple.destroy();\n\t}\n}\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AccordionComponent } from './accordion.component';\nimport { AccordionItemComponent } from './accordion-item.component';\nimport { AccordionItemDirective } from './accordion-item.directive';\nimport { AccordionItemImgDirective } from './accordion-item-img.directive';\n\n@NgModule({\n\timports: [CommonModule, HttpClientModule],\n\tdeclarations: [AccordionComponent, AccordionItemComponent, AccordionItemDirective, AccordionItemImgDirective],\n\texports: [AccordionComponent],\n})\nexport class AccordionModule {}\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { Component } from '@angular/core';\n\nimport { Accordion, IAccordionStyling } from '@ngx-dummy/accordion-simple/index';\nimport { dummyAccordionList2, dummyAccordionList1 } from './helpers/dummy-data';\nimport { AppComponent } from './app.component';\n\n@Component({\n\tselector: 'app-root2',\n\ttemplate: `\n\t\t<div class=\"mdc-layout-grid mdc-layout-grid--align-center\">\n\t\t\t<div class=\"mdc-layout-grid__inner mb-1\">\n\t\t\t\t<div class=\"mdc-layout-grid__cell mdc-layout-grid__cell--span-12 mdc-layout-grid__cell--align-center\">\n\t\t\t\t\t<h2 class=\"text-center\">{{ title }}</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"mdc-layout-grid__inner mb-1\">\n\t\t\t\t<div class=\"mdc-layout-grid__cell mdc-layout-grid__cell--align-center mdc-layout-grid__cell--span-12\">\n\t\t\t\t\t<ngxd-accordion [accordionList]=\"accordList1$ | async\" [accordionStyling]=\"styling\" openSign=\"plus1.png\" minus=\"min.png\"></ngxd-accordion>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class App2Component extends AppComponent {\n\ttitle = 'Yet another Accordion Sample';\n\taccordList1$: Promise<Accordion> = new Promise((resolve) =>\n\t\tresolve({\n\t\t\t...dummyAccordionList2,\n\t\t\titems: [...dummyAccordionList1.items, ...dummyAccordionList2.items],\n\t\t})\n\t);\n\n\t// colors = ['red', 'blue', 'yellow', 'pink'];\n\t// randColor$ = interval(2000).pipe(\n\t// \tmap(_ => Math.floor(Math.random() * this.colors.length)),\n\t// \ttap(ind => console.log(\"Index \", ind)),\n\t// \tmap(ind => this.colors[ind] || \"#ccc\"),\n\t// \ttap(val => console.log(\"Selected color ::: \", val))\n\t// );\n\n\tstyling: IAccordionStyling = {\n\t\t...super.styling,\n\t\tbodyDblclkCloseItems: true,\n\t\titemStyling: {\n\t\t\theadBgColor: 'grey',\n\t\t\tpadding: 1,\n\t\t\theadColor: 'lightgreen',\n\t\t},\n\t};\n}\n","/*!\n * @ngx-dummy/Accordion-Simple library\n * Simple accordion created for angular / ionic projects.\n * https://github.com/ngx-dummy/accordion-simple\n *\n * Copyright  Vladimir Ovsyukov <ovsyukov@yandex.com>\n * Published under GNU LGPLv3 License\n */\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AccordionModule } from '@ngx-dummy/accordion-simple/accordion.module';\nimport { App2Component } from './app2.component';\n\n@NgModule({\n\timports: [BrowserAnimationsModule, AccordionModule],\n\tdeclarations: [AppComponent, App2Component],\n\tbootstrap: [AppComponent, App2Component],\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nsetTimeout(() => {\n\tplatformBrowserDynamic()\n\t\t.bootstrapModule(AppModule, { ngZoneEventCoalescing: true })\n\t\t.catch((err) => console.error(err));\n}, 1500);\n"],"x_google_ignoreList":[]}